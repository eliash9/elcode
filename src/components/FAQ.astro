---
interface Item { q: string; a: string; }
const { items } = Astro.props as { items: Item[] };
---
<div class="space-y-3">
  {items.map((it, idx) => (
    <details class="group rounded-2xl border border-slate-200 bg-white p-4 open:shadow-soft dark:bg-slate-900/60 dark:border-slate-700/60" {...(idx === 0 ? { open: true } : {})}>
      <summary class="flex cursor-pointer list-none items-center justify-between gap-4">
        <h3 class="font-medium text-slate-900 dark:text-slate-100">{it.q}</h3>
        <span class="inline-flex h-7 w-7 items-center justify-center rounded-full bg-slate-100 text-slate-600 transition-transform group-open:rotate-45 dark:bg-slate-800 dark:text-slate-300">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="h-4 w-4" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M12 5v14M5 12h14"/></svg>
        </span>
      </summary>
      <div class="accordion-content mt-2"><div class="text-slate-600 dark:text-slate-300">{it.a}</div></div>
    </details>
  ))}
  <p class="text-sm text-slate-500 dark:text-slate-400">Masih ada pertanyaan? <a class="text-brand hover:underline" href="/contact">Hubungi kami</a>.</p>
  
</div>
